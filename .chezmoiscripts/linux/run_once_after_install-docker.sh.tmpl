{{ if and (eq .chezmoi.os "linux") (and (hasKey .chezmoi.osRelease "id") (eq .chezmoi.osRelease.id "ubuntu")) .docker -}}
#!/bin/sh

# https://docs.docker.com/engine/install/ubuntu/

for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do
    sudo apt-get remove $pkg
done

sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg

sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo usermod $USER --append --group docker

{{   if .wsl -}}
mkdir -p /etc/docker/
echo '{ "hosts": ["unix:///var/run/docker.sock", "tcp://0.0.0.0:2375"] }' | sudo tee /etc/docker/daemon.json > /dev/null
echo {{ dict | setValueAtPath "boot.systemd" false | setValueAtPath "boot.command" "/usr/sbin/service docker start" | toIni | quote }} | sudo tee -a /etc/wsl.conf
{{   else -}}
cat - << EOS | sudo tee /etc/systemd/system/docker.service.d/override.conf > /dev/null
# % systemd daemon-reload
# % systemd restart docker.service
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375 --containerd=/run/containerd/containerd.sock
EOS
echo '% systemd daemon-reload'
echo '% systemd restart docker.service'
{{   end -}}
{{ end -}}
