{{/* true if this machine should have Docker installed */}}
{{- $docker := false -}}
{{- $docker = promptBoolOnce . "docker" "Install docker" -}}

{{- $wsl := and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
{{- $wsl_systemd := false -}}
{{- $wsl_userprofile := "" -}}
{{- if $wsl -}}
{{- $wsl_systemd = promptBoolOnce . "systemd" "Using systemd" -}}
{{-   if env "USERPROFILE" | empty | not -}}
{{- $wsl_userprofile = env "USERPROFILE" -}}
{{-   else if expandenv "/mnt/c/Users/$USER" | stat -}}
{{- $wsl_userprofile = expandenv "/mnt/c/Users/$USER" -}}
{{-   end -}}
{{- end -}}

{{- $cpuCores := 1 -}}
{{- $cpuThreads := 1 -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $cpuCores = (output "sysctl" "-n" "hw.physicalcpu_max") | trim | atoi -}}
{{-   $cpuThreads = (output "sysctl" "-n" "hw.logicalcpu_max") | trim | atoi -}}
{{- else if eq .chezmoi.os "linux" -}}
{{-   $cpuCores = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | sort --field-separator=',' --key='2,4' --unique | wc --lines") | trim | atoi -}}
{{-   $cpuThreads = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | wc --lines") | trim | atoi -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   $cpuCores = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfCores") | trim | atoi -}}
{{-   $cpuThreads = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfLogicalProcessors") | trim | atoi -}}
{{- end -}}

progress = true
format = "yaml"

[edit]
{{- if eq .chezmoi.os "windows" }}
command = "gvim.exe"
args = ["--remote-tab-wait-silent"]
{{- else }}
command = "vim"
{{- end }}

[diff]
{{- if lookPath "difft" }}
command = "difft"
{{- end }}

[git]
autoCommit = true
autoPush = false

[cd]
{{- if eq .chezmoi.os "windows" }}
command='pwsh'
args=['-NoLogo']
{{- end }}

[data]
docker = {{ $docker }}
wsl = {{ $wsl }}
{{- if $wsl }}
wsl_systemd = {{ $wsl_systemd }}
wsl_userprofile = {{ $wsl_userprofile | quote }}
{{- end }}
distribution = {{ get .chezmoi.osRelease "id" | quote }}
cpuCores = {{ $cpuCores }}
cpuThreads = {{ $cpuThreads }}

[interpreters.ps1]
{{- if eq .chezmoi.os "windows" }}
command = "pwsh.exe"
args = ["-NoLogo", "-NoProfile"]
{{- end }}
