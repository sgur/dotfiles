if !has('vim9script')
  finish
endif
vim9script

if exists('g:loaded_ambiwidth')
  finish
endif
g:loaded_ambiwidth = 1

# https://github.com/notifications?query=repo%3Avim-jp%2Fissues#issuecomment-328280126

final emoji_all = [
  [0x203c, 0x203c, 2],
  [0x2049, 0x2049, 2],
  [0x2122, 0x2122, 2],
  [0x2139, 0x2139, 2],
  [0x2194, 0x2199, 2],
  [0x21a9, 0x21aa, 2],
  [0x231a, 0x231b, 2],
  [0x2328, 0x2328, 2],
  [0x23cf, 0x23cf, 2],
  [0x23e9, 0x23f3, 2],
  [0x23f8, 0x23fa, 2],
  [0x24c2, 0x24c2, 2],
  [0x25aa, 0x25ab, 2],
  [0x25b6, 0x25b6, 2],
  [0x25c0, 0x25c0, 2],
  [0x25fb, 0x25fe, 2],
  [0x2600, 0x2604, 2],
  [0x260e, 0x260e, 2],
  [0x2611, 0x2611, 2],
  [0x2614, 0x2615, 2],
  [0x2618, 0x2618, 2],
  [0x261d, 0x261d, 2],
  [0x2620, 0x2620, 2],
  [0x2622, 0x2623, 2],
  [0x2626, 0x2626, 2],
  [0x262a, 0x262a, 2],
  [0x262e, 0x262f, 2],
  [0x2638, 0x263a, 2],
  [0x2640, 0x2640, 2],
  [0x2642, 0x2642, 2],
  [0x2648, 0x2653, 2],
  [0x2660, 0x2660, 2],
  [0x2663, 0x2663, 2],
  [0x2665, 0x2666, 2],
  [0x2668, 0x2668, 2],
  [0x267b, 0x267b, 2],
  [0x267f, 0x267f, 2],
  [0x2692, 0x2697, 2],
  [0x2699, 0x2699, 2],
  [0x269b, 0x269c, 2],
  [0x26a0, 0x26a1, 2],
  [0x26aa, 0x26ab, 2],
  [0x26b0, 0x26b1, 2],
  [0x26bd, 0x26be, 2],
  [0x26c4, 0x26c5, 2],
  [0x26c8, 0x26c8, 2],
  [0x26ce, 0x26cf, 2],
  [0x26d1, 0x26d1, 2],
  [0x26d3, 0x26d4, 2],
  [0x26e9, 0x26ea, 2],
  [0x26f0, 0x26f5, 2],
  [0x26f7, 0x26fa, 2],
  [0x26fd, 0x26fd, 2],
  [0x2702, 0x2702, 2],
  [0x2705, 0x2705, 2],
  [0x2708, 0x270d, 2],
  [0x270f, 0x270f, 2],
  [0x2712, 0x2712, 2],
  [0x2714, 0x2714, 2],
  [0x2716, 0x2716, 2],
  [0x271d, 0x271d, 2],
  [0x2721, 0x2721, 2],
  [0x2728, 0x2728, 2],
  [0x2733, 0x2734, 2],
  [0x2744, 0x2744, 2],
  [0x2747, 0x2747, 2],
  [0x274c, 0x274c, 2],
  [0x274e, 0x274e, 2],
  [0x2753, 0x2755, 2],
  [0x2757, 0x2757, 2],
  [0x2763, 0x2764, 2],
  [0x2795, 0x2797, 2],
  [0x27a1, 0x27a1, 2],
  [0x27b0, 0x27b0, 2],
  [0x27bf, 0x27bf, 2],
  [0x2934, 0x2935, 2],
  [0x2b05, 0x2b07, 2],
  [0x2b1b, 0x2b1c, 2],
  [0x2b50, 0x2b50, 2],
  [0x2b55, 0x2b55, 2],
  [0x3030, 0x3030, 2],
  [0x303d, 0x303d, 2],
  [0x3297, 0x3297, 2],
  [0x3299, 0x3299, 2],
  [0x1f004, 0x1f004, 2],
  [0x1f0cf, 0x1f0cf, 2],
  [0x1f170, 0x1f171, 2],
  [0x1f17e, 0x1f17f, 2],
  [0x1f18e, 0x1f18e, 2],
  [0x1f191, 0x1f19a, 2],
  [0x1f1e6, 0x1f1ff, 2],
  [0x1f201, 0x1f202, 2],
  [0x1f21a, 0x1f21a, 2],
  [0x1f22f, 0x1f22f, 2],
  [0x1f232, 0x1f23a, 2],
  [0x1f250, 0x1f251, 2],
  [0x1f300, 0x1f321, 2],
  [0x1f324, 0x1f393, 2],
  [0x1f396, 0x1f397, 2],
  [0x1f399, 0x1f39b, 2],
  [0x1f39e, 0x1f3f0, 2],
  [0x1f3f3, 0x1f3f5, 2],
  [0x1f3f7, 0x1f4fd, 2],
  [0x1f4ff, 0x1f53d, 2],
  [0x1f549, 0x1f54e, 2],
  [0x1f550, 0x1f567, 2],
  [0x1f56f, 0x1f570, 2],
  [0x1f573, 0x1f57a, 2],
  [0x1f587, 0x1f587, 2],
  [0x1f58a, 0x1f58d, 2],
  [0x1f590, 0x1f590, 2],
  [0x1f595, 0x1f596, 2],
  [0x1f5a4, 0x1f5a5, 2],
  [0x1f5a8, 0x1f5a8, 2],
  [0x1f5b1, 0x1f5b2, 2],
  [0x1f5bc, 0x1f5bc, 2],
  [0x1f5c2, 0x1f5c4, 2],
  [0x1f5d1, 0x1f5d3, 2],
  [0x1f5dc, 0x1f5de, 2],
  [0x1f5e1, 0x1f5e1, 2],
  [0x1f5e3, 0x1f5e3, 2],
  [0x1f5e8, 0x1f5e8, 2],
  [0x1f5ef, 0x1f5ef, 2],
  [0x1f5f3, 0x1f5f3, 2],
  [0x1f5fa, 0x1f64f, 2],
  [0x1f680, 0x1f6c5, 2],
  [0x1f6cb, 0x1f6d2, 2],
  [0x1f6e0, 0x1f6e5, 2],
  [0x1f6e9, 0x1f6e9, 2],
  [0x1f6eb, 0x1f6ec, 2],
  [0x1f6f0, 0x1f6f0, 2],
  [0x1f6f3, 0x1f6f8, 2],
  [0x1f910, 0x1f93a, 2],
  [0x1f93c, 0x1f93e, 2],
  [0x1f940, 0x1f945, 2],
  [0x1f947, 0x1f94c, 2],
  [0x1f950, 0x1f96b, 2],
  [0x1f980, 0x1f997, 2],
  [0x1f9c0, 0x1f9c0, 2],
  [0x1f9d0, 0x1f9e6, 2]
  ]

# https://github.com/ryanoasis/nerd-fonts/wiki/Glyph-Sets-and-Code-Points#overview
def CalcWidthByFonts(fontName: string): number
  if !has('gui_running')
    return 1
  endif

  return 2
enddef
final powerline_width = CalcWidthByFonts(&guifont)
final nerd_fonts = [
  [0x23fb, 0x23fe, 1], # IEC Power Symbols
#  [0x2665, 0x2665, 2], # Octoicons ♥
#  [0x26a1, 0x26a1, 2], # Octoicons ⚡
   [0x2b58, 0x2b58, 1], # IEC Power Symbols
  [0xe000, 0xe00a, 2], # Pomicons
  [0xe0a0, 0xe0a2, 1], # Powerline
  [0xe0a3, 0xe0a3, 1], # Powerline Extra
  [0xe0b0, 0xe0b3, 1], # Powerline
  [0xe0b4, 0xe0b7, 1], # Powerline Extra
  [0xe0b8, 0xe0bf, powerline_width], # Powerline Extra
  [0xe0c0, 0xe0c8, 2], # Powerline Extra
  [0xe0ca, 0xe0ca, 2], # Powerline Extra
  [0xe0cc, 0xe0d1, 2], # Powerline Extra
  [0xe0d2, 0xe0d2, powerline_width], # Powerline Extra
  [0xe0d4, 0xe0d4, powerline_width], # Powerline Extra
  [0xe200, 0xe2d4, 2], # Font Awesome Extension
  [0xe300, 0xe3eb, 2], # Weather Icons
  [0xe5fa, 0xe631, 2], # Seti-UI + Custom
  [0xe700, 0xe7c5, 2], # Devicons
  [0xea60, 0xebeb, 2], # Codeicons
  [0xf000, 0xf2e0, 2], # Font Awesome
  [0xf300, 0xf32d, 2], # Font Logos
  [0xf400, 0xf4a8, 2], # Octicons
  [0xf4a9, 0xf4a9, 2], # Octicons
  [0xf500, 0xfd46, 2], # Material Design
  ]

if &encoding == 'utf-8' && exists('*setcellwidths') && has('vim_starting')
  set ambiwidth=single
  setcellwidths(emoji_all + nerd_fonts)
else
  def ListFonts(fontRangeList: list<any>)
    for range in fontRangeList
      echo printf("0x%x...0x%x", range[0], range[1]) list2str(range(range[0], range[1]), v:true)
    endfor
  enddef
  ListFonts(nerd_fonts)
endif

