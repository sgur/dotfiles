# Default configuration: https://github.com/helix-editor/helix/blob/master/languages.toml

[[language]]
name = "bash"
formatter = { command = "shfmt", args = ["-i", "2", "-ci"]} # Google's Style
language-servers = ["bash-language-server", "efm-langserver"]

[[language]]
name = "css"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "efm-langserver"]

[[language]]
name = "fish"
formatter = { command = "fish_indent" }
auto-format = true

[[language]]
name = "go"
scope = "source.go"
language-servers = ["gopls", "efm-langserver"]

[[language]]
name = "html"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "html"] }
language-servers = ["vscode-html-language-server", "efm-langserver"]

[[language]]
name = "javascript"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "typescript"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint-language-server", "efm-langserver"]

[[language]]
name = "json"
scope = "source.json"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "json"] }
language-servers = ["vscode-json-language-server", "efm-langserver"]

[[language]]
name = "jsx"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "typescript"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint-language-server", "efm-langserver"]

[[language]]
name = "kdl"
language-servers = ["efm-langserver"]

[[language]]
name = "markdown"
language-servers = ["marksman", "efm-langserver"]
auto-format = true
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "markdown"] }

[[language]]
name = "pwsh"
# language-id = "powershell"
scope = "source.ps1"
file-types = ["ps1", "psm1", "psd1"]
shebangs = ["pwsh"]
roots = []
comment-token = "#"
indent = { tab-width = 4, unit = "    " }

# It look broken
# https://github.com/helix-editor/helix/issues/3123
# [[grammar]]
# name = "pwsh"
# source = { git = "https://github.com/sgur/tree-sitter-PowerShell", rev = "263b6637aa8ab4cdc8c39da3d93adb657d7aa60d" }

[[language]]
name = "python"
language-servers = ["pylsp-all", "pyright-langserver", "efm-langserver"]
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
roots = ["pyproject.toml"]

[[grammar]]
name = "ron"
source = { git = "https://github.com/0xcharly/tree-sitter-ron", rev = "aa4ab0333ff2e6a22d79e1fbfb2c48b619a7793e" }

[[language]]
name = "scss"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "efm-langserver"]

[[language]]
name = "toml"
language-servers = ["taplo-lsp", "efm-langserver"]
formatter = { command = "taplo-lsp", args = ["format", "-"]}

[[language]]
name = "tsx"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "typescript"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint-language-server", "efm-langserver"]

[[language]]
name = "typescript"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "typescript"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint-language-server", "efm-langserver"]

[[language]]
name = "yaml"
language-servers = ["yaml-language-server", "efm-langserver"]

[language-server]
deno = { command = "deno", args = ["lsp"] }
efm-langserver = { command = "efm-langserver" }
eslint-language-server = { command = "eslint-language-server", args = ["--stdio"] }
obsidian-lsp = { command = "obsidian-lsp", args = ["--stdio"] }
pylsp-all = { command = "pylsp-all" }
pyright-langserver = { command = "pyright-langserver", args = ["--stdio"], config = { python = { analysis = { typeCheckingMode = "strict", useLibraryCodeForTypes = true, reportMissingImports = true } } } }
stylelint-lsp = { command = "stylelint-lsp", args = ["--stdio"] }
taplo-lsp = { command = "taplo", args = ["lsp", "stdio"] }

[language-server.vscode-json-language-server.config]
provideFormatter = true

[language-server.vscode-json-language-server.config.json]
format = { enable = true }

{{ $catalog := output "curl" "-sJL" "https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/api/json/catalog.json" | fromJson -}}
{{ slice ( $catalog | jq "[.schemas[] | select(.fileMatch | any(endswith(\"json\")))?] | {\"language-server\": {\"vscode-json-language-server\": {config: {json: {schemas: .}}}}}" | toToml | splitList "\n") 5 | join "\n" -}}

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
customTags = [
  '!And sequence',
  '!Base64',
  '!Cidr sequence',
  '!Equals sequence',
  '!FindInMap sequence',
  '!Fn',
  '!GetAZs',
  '!GetAtt',
  '!If sequence',
  '!ImportValue',
  '!Join sequence',
  '!Not sequence',
  '!Or sequence',
  '!Ref',
  '!Select sequence',
  '!Split sequence',
  '!Sub'
]

{{ slice ( $catalog | jq "[.schemas[] | select(.fileMatch | any(endswith(\"yaml\") or endswith(\"yml\")))? ] | map({(.url): (.fileMatch)}) | {\"language-server\": {\"yaml-language-server\": {config: {yaml: {schemas: .}}}}}" | toToml | splitList "\n") 5 | join "\n" -}}
