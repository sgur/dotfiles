# Default configuration: https://github.com/helix-editor/helix/blob/master/languages.toml

[[language]]
name = "astro"
language-servers = ["astro-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "bash"
formatter = { command = "shfmt", args = ["-i", "2", "-ci"]} # Google's Style
language-servers = ["bash-language-server", "efm-langserver", "buffer-ls"]

[[language]]
name = "css"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "efm-langserver", "buffer-ls"]

[[language]]
name = "fish"
formatter = { command = "fish_indent" }
auto-format = true
language-servers = ["efm-langserver", "buffer-ls"]

[[language]]
name = "go"
scope = "source.go"
language-servers = ["gopls", "golangci-lint-langserver", "efm-langserver", "buffer-ls"]

[[language]]
name = "hjson"
scope = "source.hjson"
injection-regex = "hson"
file-types = ["hjson"]
indent = { tab-width = 4, unit = "  " }
language-servers = ["buffer-ls"]
roots = []

[[grammar]]
name = "hjson"
source = { git = "https://github.com/winston0410/tree-sitter-hjson", rev = "02fa3b79b3ff9a296066da6277adfc3f26cbc9e0" }

[[language]]
name = "html"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "html"] }
language-servers = ["vscode-html-language-server", "efm-langserver", "buffer-ls"]

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "biome-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "json"
language-servers = ["vscode-json-language-server", "biome-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "biome-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "kdl"
language-servers = ["efm-langserver"]

[[language]]
name = "markdown"
language-servers = ["marksman", "efm-langserver", "buffer-ls"]
auto-format = true
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "markdown"] }

[[language]]
name = "pwsh"
# language-id = "powershell"
scope = "source.ps1"
file-types = ["ps1", "psm1", "psd1"]
shebangs = ["pwsh"]
roots = []
comment-token = "#"
indent = { tab-width = 4, unit = "    " }

# It look broken
# https://github.com/helix-editor/helix/issues/3123
# [[grammar]]
# name = "pwsh"
# source = { git = "https://github.com/JamesWTruher/tree-sitter-PowerShell", rev = "1ac090522cb339a6fd9d3ac915da01cb263d69e1" }

[[language]]
name = "python"
language-servers = ["pylsp-all", "pyright-langserver", "ruff-lsp", "efm-langserver", "buffer-ls"]
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
roots = ["pyproject.toml"]

[[language]]
name = "scss"
formatter = { command = "npx", args = ["--yes", "prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "efm-langserver", "buffer-ls"]

[[language]]
name = "toml"
language-servers = ["taplo-lsp", "efm-langserver", "buffer-ls"]
formatter = { command = "taplo-lsp", args = ["format", "-"]}

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "biome-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "biome-ls", "efm-langserver", "buffer-ls"]

[[language]]
name = "yaml"
language-servers = ["yaml-language-server", "efm-langserver", "buffer-ls"]

[language-server]
astro-ls = { command = "astro-ls", args = ["--stdio"] }
deno = { command = "deno", args = ["lsp"] }
efm-langserver = { command = "efm-langserver" }
vscode-eslint-language-server = { command = "vscode-eslint-language-server", args = ["--stdio"] }
obsidian-lsp = { command = "obsidian-lsp", args = ["--stdio"] }
ruff-lsp = { command = "ruff-lsp", config = { settings = { args = [], run = "onSave" } } }
stylelint-lsp = { command = "stylelint-lsp", args = ["--stdio"] }

[language-server.biome-ls]
command = "biome"
args = ["lsp-proxy", '--config-path={{- joinPath .chezmoi.homeDir ".config" "biome.json" | quote -}}']

[language-server.buffer-ls]
{{ if lookPath "simple-completion-language-server" -}}
# https://github.com/estin/simple-completion-language-server
# $ cargo install --git https://github.com/estin/simple-completion-language-server.git
command = "simple-completion-language-server"
config = { max_completion_items = 20, snippets_first = false }
{{- else -}}
# https://github.com/metafates/buffer-language-server
# cargo install buffer-language-server
command = "buffer-language-server"
{{- end }}

[language-server.pylsp-all]
command = "pylsp-all"

[language-server.pylsp-all.config]
pylsp = { configurationSources = ['flake8'] }

[language-server.pylsp-all.config.plugins]
autopep8 = { enabled = false }
flake8 = { enabled = false }
mccabe = { enabled = false }
pycodestyle = { enabled = false }
pydocstyle = { enabled = false }
pyflakes = { enabled = false }
rope_autoimport = { enabled = true }
rope_completion = { enabled = true }
yapf = { enabled = false }

[language-server.pyright-langserver]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright-langserver.config.python.analysis]
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingImports = true

[language-server.taplo-lsp]
command = "taplo"
args = ["lsp", "stdio"]

[language-server.taplo-lsp.config]
activationStatus = true
taploConfig = 'taplo://taplo.toml'
taploConfigEnabled = true
semanticTokens = false
debug = false

[language-server.taplo-lsp.config.evenBetterToml.schema]
enabled = true
links = false
repositoryEnabled = true
repositoryUrl = "https://taplo.tamasfe.dev/schema_index.json"

[language-server.taplo-lsp.config.evenBetterToml.schema.associations]
'^(.*(/|\\)Cargo\.toml|Cargo\.toml)$' = "taplo://Cargo.toml"

[language-server.taplo-lsp.config.evenBetterToml.formatter]
alignEntries = false
alignComments = true
arrayTrailingComma = true
arrayAutoExpand = true
arrayAutoCollapse = true
compactArrays = true
compactInlineTables = false
compactEntries = false
columnWidth = 80
indentTables = false
indentEntries = false
indentString = {}
reorderKeys = true
allowedBlankLines = 2
trailingNewline = true
crlf = false

[language-server.taplo-lsp.config.evenBetterToml.actions]
ignoreDepracatedAssociations = false

[language-server.vscode-json-language-server.config.json]
format = { enable = true }

{{ $catalog := output "curl" "-sJL" "https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/api/json/catalog.json" | fromJson -}}
{{ slice ( $catalog | jq "[.schemas[] | select(.fileMatch | any(endswith(\"json\")))?] | {\"language-server\": {\"vscode-json-language-server\": {config: {json: {schemas: .}}}}}" | toToml | splitList "\n") 5 | join "\n" -}}

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
customTags = [
  '!And sequence',
  '!Base64',
  '!Cidr sequence',
  '!Equals sequence',
  '!FindInMap sequence',
  '!Fn',
  '!GetAZs',
  '!GetAtt',
  '!If sequence',
  '!ImportValue',
  '!Join sequence',
  '!Not sequence',
  '!Or sequence',
  '!Ref',
  '!Select sequence',
  '!Split sequence',
  '!Sub'
]

{{ slice ( $catalog | jq "[.schemas[] | select(.fileMatch | any(endswith(\"yaml\") or endswith(\"yml\")))? ] | map({(.url): (.fileMatch)}) | {\"language-server\": {\"yaml-language-server\": {config: {yaml: {schemas: .}}}}}" | toToml | splitList "\n") 5 | join "\n" -}}
