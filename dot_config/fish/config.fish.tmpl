{{ if and (lookPath "gpg") (lookPath "gpgconf") -}}
if type -q gpg
    set -gx GPG_TTY (tty)
    gpg-connect-agent --quiet updatestartuptty /bye >/dev/null &
    set -gx SSH_AUTH_SOCK (gpgconf --list-dirs agent-ssh-socket)
    commandline -f repaint
end
{{- end }}

# meaningful-ooo/sponge
set sponge_purge_only_on_exit true
set sponge_delay 5

fish_config theme choose 'Catppuccin Mocha'

if status is-interactive
    # vscode の integrated terminal からは vscode のエディターを開く
    if test "$TERM_PROGRAM" = vscode
        set -gx EDITOR 'code -w'
    end

    set -l os (uname -s)
    # Linux
    # Darwin
    set -l arch (uname -m)
    # x86_64
    # arm64

    if test $os = Darwin
        function rm --wraps rm --description 'rm with -i option by default'
            command rm -i $argv
        end
    else
        function rm --wraps rm --description 'rm with --interactive option by default'
            command rm --interactive=once $argv
        end
    end
    function cp --wraps=cp --description 'cp with -i option by default'
        command cp -i $argv
    end
    function mv --wraps=mv --description 'mv with -i option by default'
        command mv -i $argv
    end

    # gazorby/fish-abbreviation-tip が conf.d のロード中に初期化されるので
    # config.fish 内で abbr を設定する
    abbr --add curl /usr/bin/curl
    abbr --add ipecho -- /usr/bin/curl --silent ipecho.net/plain

    abbr --add za zellij attach
    abbr --add za:c -- zellij attach --create
    abbr --add zl zellij list-sessions

    abbr --add chz -- chezmoi
    abbr --add chz:cd -- cd (chezmoi source-path)

    abbr --add CC --position anywhere --set-cursor "%| fish_clipboard_copy"
    abbr --add ^^ --position anywhere '(git rev-parse --show-toplevel)'

    abbr --add hostname uname -n

    abbr --add drawio docker container run -it --rm --name draw.io --publish 8080:8080 jgraph/drawio
    if type -q static-web-server
        abbr --add sws static-web-server
    else
        abbr --add --set-cursor sws docker run -it --rm --name static-web-server --publish 8787:80 --volume %:/public ghcr.io/static-web-server/static-web-server:2
    end

    if type -q docker
        abbr --add plantuml-daemon docker container run --detach --publish 9999:8080 --name plantuml-server --restart=always plantuml/plantuml-server:jetty
    end

    # abbr 用の外部 gist を読み込む
    if type -q ghq
        set -l abbr_gist_path (ghq list -p 9e80be22552dda4613d7833273f6bc59 |string trim)
        if test -n "$abbr_gist_path"
            source $abbr_gist_path/*_abbr.fish
        end
    end

    if type -q _na
        abbr --add n --function _na
    end

    abbr --add jira-create-subtask --set-cursor "jira issue create --type Sub-task --parent % --summary --body --no-edit"
    abbr --add jira-batch-create-subtask --set-cursor "cat | xargs -i -- jira issue create -t Sub-task -P % --no-input -s {} -b \"\""

    abbr --add tm tmux new-session -A

    if type -q aws
        for profile in (aws configure list-profiles)
            abbr --add $profile:exec aws-vault exec $profile
            abbr --add $profile:login --set-cursor "aws-vault login $profile %--stdout | fish_clipboard_copy"
        end
    end

    if type -q terraform
        abbr --add --position anywhere tf terraform
        abbr --add tff terraform fmt
        abbr --add tff:recursive terraform fmt --recursive
        if type -q tflint
            abbr --add tfl tflint
            abbr --add tfl:recursive tflint --recursive
        end
        if type -q trivy
            abbr --add tfr trivy config .
        end
    end


    # \el -> \e, or \co へ移設
    bind --user alt-comma __fish_list_current_token
    bind --user ctrl-o __fish_list_current_token
end

emit fish_ready

# 共通の設定はログインシェルでのみ行う
status is-login || exit

{{ $homeDir := .chezmoi.homeDir -}}
{{ range (list ".yarn/bin" ".cargo/bin" ".dotnet/tools") -}}
{{   $path := joinPath $homeDir . -}}
{{   if get (stat $path) "isDir" -}}
fish_add_path -g {{ $path }}
{{   end -}}
{{ end -}}
fish_add_path -g ~/bin ~/.local/bin

if not contains /usr/share/fish/vendor_completions.d $fish_complete_path
    set -g fish_complete_path $fish_complete_path /usr/share/fish/vendor_completions.d
end
if not contains /usr/share/fish/completions $fish_complete_path
    set -g fish_complete_path $fish_complete_path /usr/share/fish/completions
end
if not contains ~/.local/share/fish/generated_completions $fish_complete_path
    set -g fish_complete_path $fish_complete_path ~/.local/share/fish/generated_completions
end

{{- if .wsl }}
set -g fish_help_browser (which xdg-open)
{{- end }}

if test -z "$EDITOR"
{{- if lookPath "hx"}}
    set -gx EDITOR hx
{{- else if lookPath "vim"}}
    set -gx EDITOR vim
{{- end}}
end
set -gx HGREP_DEFAULT_OPTS --theme Nord
set -gx LANG ja_JP.UTF-8
set -gx LESS --incsearch --quit-if-one-screen --raw-control-chars
set -gx PIPENV_VENV_IN_PROJECT 1
set -gx RIPGREP_CONFIG_PATH ~/.config/ripgrep/ripgreprc
{{ if eq .chezmoi.os "darwin" -}}
if test "$TERM" = "screen-256color"
    set -gx TERM xterm-256color
end
{{- end }}

