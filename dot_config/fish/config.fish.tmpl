{{ if and (lookPath "gpg") (lookPath "gpgconf") -}}
if type -q gpg
    set -gx GPG_TTY (tty)
    gpg-connect-agent --quiet updatestartuptty /bye >/dev/null &
    set -gx SSH_AUTH_SOCK (gpgconf --list-dirs agent-ssh-socket)
    commandline -f repaint
end
{{- end }}

if status is-interactive
    # vscode の integrated terminal からは vscode のエディターを開く
    if test "$TERM_PROGRAM" = vscode
        set -gx EDITOR 'code -w'
    end

    alias hostname 'uname -n'

    {{ if lookPath "carapace" -}}
    set -gx fish_complete_path $fish_complete_path {{ joinPath .chezmoi.homeDir ".config" "fish" "carapace_completions" }}
    {{- end }}
end

# 共通の設定はログインシェルでのみ行う
status is-login || exit

{{ $homeDir := .chezmoi.homeDir -}}
{{ range (list ".yarn/bin" ".cargo/bin" ".dotnet/tools") -}}
{{   $path := joinPath $homeDir . -}}
{{   if get (stat $path) "isDir" -}}
fish_add_path {{ $path }}
{{   end -}}
{{ end -}}
fish_add_path ~/bin ~/.local/bin

# meaningful-ooo/sponge
set sponge_purge_only_on_exit true
set sponge_delay 5

set -gx EDITOR vim
# git commit では copilot を使いたいので vim を利用する
set -gx GIT_EDITOR vim
if type -q hx
    set -gx EDITOR hx
end

{{ if and (eq .chezmoi.os "darwin") (eq (env "TERM") "screen-256color") -}}
set -gx TERM xterm-256color
{{- end }}

set -gx LANG ja_JP.UTF-8

set -gx PIPENV_VENV_IN_PROJECT 1

set -gx LESS --incsearch --quit-if-one-screen --raw-control-chars

{{ if .wsl -}}
set -gx fish_help_browser (which xdg-open)
{{- end }}
